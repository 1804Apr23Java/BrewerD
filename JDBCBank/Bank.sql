CREATE TABLE CUSTOMER (
    CUSTOMER_ID VARCHAR(150) PRIMARY KEY,
    CUSTOMER_PASSWORD VARCHAR(150),
    CUSTOMER_ADMIN NUMBER(1) DEFAULT 0
    );
    
CREATE TABLE BANKACCOUNT (
    BANKACCOUNT_NUM INTEGER PRIMARY KEY,
    BALANCE NUMBER (14, 2) DEFAULT 0,
    ACCOUNT_TYPE VARCHAR(20) DEFAULT 'Checking'
);

--CREATE TABLE CUSTOMER_ACCOUNT (
--    CUSTOMER_ID VARCHAR(150),
--    BANKACCOUNT_NUM INTEGER,
--    PRIMARY KEY(CUSTOMER_ID, BANKACCOUNT_NUM)
--);
    
--CREATE TABLE XACT (
--    XACT_ID INTEGER PRIMARY KEY,
--    DIFFERENT NUMBER (14,2) NOT NULL
--);

--CREATE TABLE ACCOUNT_XACT (
--    BANKACCOUNT_NUM INTEGER,
--    XACT_ID INTEGER,
--  PRIMARY KEY(BANKACCOUNT_NUM, XACT_ID)
--);

-- ALTER TABLE

--ALTER TABLE CUSTOMER_ACCOUNT
--ADD CONSTRAINT FK_CUSTOMER_CUSTOMER_ACCOUNT
--FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID);

--ALTER TABLE ACCOUNT_XACT
--ADD CONSTRAINT FK_BANKACCOUNT_ACCOUNT_XACT
--FOREIGN KEY (BANKACCOUNT_NUM) REFERENCES BANKACCOUNT(BANKACCOUNT_NUM);

-- STORED PROCEDURE

CREATE SEQUENCE SQ_CUSTOMER_ID
START WITH 11
INCREMENT BY 1;
/
CREATE OR REPLACE TRIGGER TR_INSERT_CUSTOMER
BEFORE INSERT ON CUSTOMER
FOR EACH ROW
BEGIN
    SELECT SQ_CUSTOMER_ID.NEXTVAL INTO :NEW.CUSTOMER_ID FROM DUAL;
END;
/
CREATE SEQUENCE SQ_BANKACCOUNT_NUM

START WITH 1 

INCREMENT BY 1;


CREATE SEQUENCE SQ_XACT_ID

START WITH 1 
INCREMENT BY 1;


CREATE OR REPLACE TRIGGER TR_BANKACCOUNT_NUM

BEFORE 
INSERT ON BANKACCOUNT

FOR EACH ROW

BEGIN
     
	SELECT SQ_BANKACCOUNT_NUM.NEXTVAL INTO :NEW.BANKACCOUNT_NUM 
	FROM DUAL;

END;



CREATE OR REPLACE TRIGGER TR_TXACT_ID

BEFORE INSERT ON XACT

FOR EACH ROW

BEGIN

     SELECT SQ_XACT_ID.NEXTVAL INTO :NEW.XACT_ID 
FROM DUAL;

END;


CREATE OR REPLACE PROCEDURE PROC_CHANGE_BALANCE(BANKACCOUNTID NUMBER,DIFFERENCE NUMBER)

IS

TEMPBALANCE NUMBER;

NEWBALANCE NUMBER;

BEGIN

   SELECT BALANCE INTO TEMPBALANCE 
	FROM BANKACCOUNT WHERE BANKACCOUNT_NUM = BANKACCOUNTID;

   NEWBALANCE := TEMPBALANCE + DIFFERENCE;

   UPDATE BANKACCOUNT SET BALANCE = NEWBALANCE 
WHERE BANKACCOUNT_NUM = BANKACCOUNTID;  

END;


--CREATE OR REPLACE TRIGGER TR_NEWACCOUNT

--TRUNCATE TABLE BANKACCOUNT;

ALTER TABLE BANKACCOUNT ADD CUSTOMER_ID NUMBER NOT NULL;
/

DROP TRIGGER TR_INSERT_CUSTOMER;
/

DROP SEQUENCE SQ_CUSTOMER_ID;
/
